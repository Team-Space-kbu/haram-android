// Generated by Dagger (https://dagger.dev).
package com.space.biblemon;

import com.space.navigator.view.NavigatorLogin;
import com.space.navigator.view.NavigatorMain;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class HaramActivity_MembersInjector implements MembersInjector<HaramActivity> {
  private final Provider<NavigatorLogin> navigatorLoginProvider;

  private final Provider<NavigatorMain> navigatorMainProvider;

  public HaramActivity_MembersInjector(Provider<NavigatorLogin> navigatorLoginProvider,
      Provider<NavigatorMain> navigatorMainProvider) {
    this.navigatorLoginProvider = navigatorLoginProvider;
    this.navigatorMainProvider = navigatorMainProvider;
  }

  public static MembersInjector<HaramActivity> create(
      Provider<NavigatorLogin> navigatorLoginProvider,
      Provider<NavigatorMain> navigatorMainProvider) {
    return new HaramActivity_MembersInjector(navigatorLoginProvider, navigatorMainProvider);
  }

  @Override
  public void injectMembers(HaramActivity instance) {
    injectNavigatorLogin(instance, navigatorLoginProvider.get());
    injectNavigatorMain(instance, navigatorMainProvider.get());
  }

  @InjectedFieldSignature("com.space.biblemon.HaramActivity.navigatorLogin")
  public static void injectNavigatorLogin(HaramActivity instance, NavigatorLogin navigatorLogin) {
    instance.navigatorLogin = navigatorLogin;
  }

  @InjectedFieldSignature("com.space.biblemon.HaramActivity.navigatorMain")
  public static void injectNavigatorMain(HaramActivity instance, NavigatorMain navigatorMain) {
    instance.navigatorMain = navigatorMain;
  }
}
